---
name: goaxfrbackend CI

on:
  release:
    types: [created]

env:
  IMAGE_NAME: goaxfrbackend

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: testpass123
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: testpass123
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v5

      - name: Install MySQL client
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update -qq
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -qq mysql-client

      - name: Create MySQL config
        run: |
          mkdir -p ~/.mysql
          cat > ~/.mysql/my.cnf << EOF
          [client]
          host=127.0.0.1
          port=3306
          user=root
          password=testpass123
          EOF
          chmod 600 ~/.mysql/my.cnf

      - name: Wait for MariaDB
        run: |
          timeout 60 bash -c 'until mysqladmin --defaults-extra-file=~/.mysql/my.cnf ping --silent; do sleep 2; done'
          echo "MariaDB is ready"

      - name: Create databases
        run: |
          mysql --defaults-extra-file=~/.mysql/my.cnf test -e "CREATE DATABASE IF NOT EXISTS nudump;"
          mysql --defaults-extra-file=~/.mysql/my.cnf test -e "CREATE DATABASE IF NOT EXISTS nudiff;"

      - name: Import database migrations
        run: |
          mysql --defaults-extra-file=~/.mysql/my.cnf nudump < migrations/nudump.sql
          mysql --defaults-extra-file=~/.mysql/my.cnf nudiff < migrations/nudiff.sql

      - name: Build Docker image
        run: docker build --load -t goaxfrbackend .

      - name: Run Docker container
        run: |
          docker run -d \
            --name goaxfrbackend \
            --network host \
            -e MYSQL_HOSTNAME=localhost \
            -e MYSQL_NUDUMP_DATABASE=nudump \
            -e MYSQL_NUDUMP_USERNAME=root \
            -e MYSQL_NUDUMP_PASSWORD=testpass123 \
            -e MYSQL_NU_DATABASE=nudiff \
            -e MYSQL_NU_USERNAME=root \
            -e MYSQL_NU_PASSWORD=testpass123 \
            -e REDIS_URL=localhost:6379 \
            goaxfrbackend

      - name: Wait for container to be ready
        run: |
          timeout 60 bash -c 'until curl -s http://localhost:8080/ready > /dev/null 2>&1; do sleep 2; done'
          echo "Container is ready"

      - name: Run integration tests
        run: ./integration_test.sh

  build:
    name: Build and Push
    needs: integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/stenstromen/${{ env.IMAGE_NAME }}:latest
            ghcr.io/stenstromen/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  flux-update:
    needs: [integration-test, build]
    runs-on: ubuntu-latest
    env:
      VERSIONTAG: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout flux repository
        uses: actions/checkout@v5
        with:
          repository: stenstromen/flux
          token: ${{ secrets.KUBE_GITHUB_TOKEN }}
          path: flux-repo
          fetch-depth: 0

      - name: Fetch repository content
        run: |
          cd flux-repo
          git fetch origin
          git checkout main

      - name: Update Deployment image tag
        run: |
          DEPLOYMENT_FILE="flux-repo/apps/stinky/axfr-backend/deployment.yaml"
          OLD_IMAGE=$(grep "image:" "$DEPLOYMENT_FILE" | awk '{print $2}')
          NEW_IMAGE="ghcr.io/stenstromen/goaxfrbackend:$VERSIONTAG"

          # Update the image tag
          sed -i "s|image:.*|image: $NEW_IMAGE|" "$DEPLOYMENT_FILE"

          # Create commit message
          echo "Update image: $OLD_IMAGE -> $NEW_IMAGE" > commit_message.txt

      - name: Commit and Push Flux Deployment Update
        run: |
          cd flux-repo
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add apps/stinky/axfr-backend/deployment.yaml
          git commit -F ../commit_message.txt
          git push
